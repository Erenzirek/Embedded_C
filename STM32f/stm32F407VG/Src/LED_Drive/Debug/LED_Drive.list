
LED_Drive.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000184  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800032c  0800032c  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800032c  0800032c  00020010  2**0
                  CONTENTS
  4 .ARM          00000000  0800032c  0800032c  00020010  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800032c  0800032c  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800032c  0800032c  0001032c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000330  08000330  00010330  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000010  20000000  08000334  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020010  2**0
                  CONTENTS
 10 .bss          0000001c  20000010  20000010  00020010  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000002c  2000002c  00020010  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000160  00000000  00000000  00020040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000a0  00000000  00000000  000201a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00020240  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  00020288  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000022d7  00000000  00000000  000202b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000061f  00000000  00000000  0002258f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000093a6  00000000  00000000  00022bae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002bf54  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  0002bfa4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000010 	.word	0x20000010
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000314 	.word	0x08000314

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000014 	.word	0x20000014
 80001e4:	08000314 	.word	0x08000314

080001e8 <main>:
uint32_t *pPortAModeReg    =   (uint32_t*)0x40020000;
uint32_t *pPortAInReg      =   (uint32_t*)0x40020010;


int main(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0

	// Clock Activate
 	*pClkReg              |=   (1<<3);	// D
 80001ee:	4b1e      	ldr	r3, [pc, #120]	; (8000268 <main+0x80>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	681a      	ldr	r2, [r3, #0]
 80001f4:	4b1c      	ldr	r3, [pc, #112]	; (8000268 <main+0x80>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	f042 0208 	orr.w	r2, r2, #8
 80001fc:	601a      	str	r2, [r3, #0]
 	*pClkReg              |=   (1<<0);	// A
 80001fe:	4b1a      	ldr	r3, [pc, #104]	; (8000268 <main+0x80>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	681a      	ldr	r2, [r3, #0]
 8000204:	4b18      	ldr	r3, [pc, #96]	; (8000268 <main+0x80>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	f042 0201 	orr.w	r2, r2, #1
 800020c:	601a      	str	r2, [r3, #0]
	// Enable Output Mode
	*pPortDModeReg        &=  ~(3<<24);
 800020e:	4b17      	ldr	r3, [pc, #92]	; (800026c <main+0x84>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	681a      	ldr	r2, [r3, #0]
 8000214:	4b15      	ldr	r3, [pc, #84]	; (800026c <main+0x84>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800021c:	601a      	str	r2, [r3, #0]
	*pPortDModeReg        |=   (1<<24);
 800021e:	4b13      	ldr	r3, [pc, #76]	; (800026c <main+0x84>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	681a      	ldr	r2, [r3, #0]
 8000224:	4b11      	ldr	r3, [pc, #68]	; (800026c <main+0x84>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800022c:	601a      	str	r2, [r3, #0]
	 //*pPortDModeOutReg   |= (1<<12);
	// Port D Enable
	while(1){
		uint8_t pinStatus = (uint8_t)(*pPortAInReg & 0x1);
 800022e:	4b10      	ldr	r3, [pc, #64]	; (8000270 <main+0x88>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	b2db      	uxtb	r3, r3
 8000236:	f003 0301 	and.w	r3, r3, #1
 800023a:	71fb      	strb	r3, [r7, #7]
		if(pinStatus){
 800023c:	79fb      	ldrb	r3, [r7, #7]
 800023e:	2b00      	cmp	r3, #0
 8000240:	d008      	beq.n	8000254 <main+0x6c>
			*pPortDOutReg ^= (1<<12);
 8000242:	4b0c      	ldr	r3, [pc, #48]	; (8000274 <main+0x8c>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	681a      	ldr	r2, [r3, #0]
 8000248:	4b0a      	ldr	r3, [pc, #40]	; (8000274 <main+0x8c>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	f482 5280 	eor.w	r2, r2, #4096	; 0x1000
 8000250:	601a      	str	r2, [r3, #0]
 8000252:	e7ec      	b.n	800022e <main+0x46>
		}
		else{
			*pPortDOutReg |= ~(1<<12);
 8000254:	4b07      	ldr	r3, [pc, #28]	; (8000274 <main+0x8c>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	681a      	ldr	r2, [r3, #0]
 800025a:	4b06      	ldr	r3, [pc, #24]	; (8000274 <main+0x8c>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	f462 5280 	orn	r2, r2, #4096	; 0x1000
 8000262:	601a      	str	r2, [r3, #0]
	while(1){
 8000264:	e7e3      	b.n	800022e <main+0x46>
 8000266:	bf00      	nop
 8000268:	20000000 	.word	0x20000000
 800026c:	20000004 	.word	0x20000004
 8000270:	2000000c 	.word	0x2000000c
 8000274:	20000008 	.word	0x20000008

08000278 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000278:	480d      	ldr	r0, [pc, #52]	; (80002b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800027c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000280:	480c      	ldr	r0, [pc, #48]	; (80002b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000282:	490d      	ldr	r1, [pc, #52]	; (80002b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000284:	4a0d      	ldr	r2, [pc, #52]	; (80002bc <LoopForever+0xe>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000288:	e002      	b.n	8000290 <LoopCopyDataInit>

0800028a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800028c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028e:	3304      	adds	r3, #4

08000290 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000290:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000292:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000294:	d3f9      	bcc.n	800028a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000296:	4a0a      	ldr	r2, [pc, #40]	; (80002c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000298:	4c0a      	ldr	r4, [pc, #40]	; (80002c4 <LoopForever+0x16>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800029c:	e001      	b.n	80002a2 <LoopFillZerobss>

0800029e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a0:	3204      	adds	r2, #4

080002a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a4:	d3fb      	bcc.n	800029e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002a6:	f000 f811 	bl	80002cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002aa:	f7ff ff9d 	bl	80001e8 <main>

080002ae <LoopForever>:

LoopForever:
    b LoopForever
 80002ae:	e7fe      	b.n	80002ae <LoopForever>
  ldr   r0, =_estack
 80002b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b8:	20000010 	.word	0x20000010
  ldr r2, =_sidata
 80002bc:	08000334 	.word	0x08000334
  ldr r2, =_sbss
 80002c0:	20000010 	.word	0x20000010
  ldr r4, =_ebss
 80002c4:	2000002c 	.word	0x2000002c

080002c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c8:	e7fe      	b.n	80002c8 <ADC_IRQHandler>
	...

080002cc <__libc_init_array>:
 80002cc:	b570      	push	{r4, r5, r6, lr}
 80002ce:	4d0d      	ldr	r5, [pc, #52]	; (8000304 <__libc_init_array+0x38>)
 80002d0:	4c0d      	ldr	r4, [pc, #52]	; (8000308 <__libc_init_array+0x3c>)
 80002d2:	1b64      	subs	r4, r4, r5
 80002d4:	10a4      	asrs	r4, r4, #2
 80002d6:	2600      	movs	r6, #0
 80002d8:	42a6      	cmp	r6, r4
 80002da:	d109      	bne.n	80002f0 <__libc_init_array+0x24>
 80002dc:	4d0b      	ldr	r5, [pc, #44]	; (800030c <__libc_init_array+0x40>)
 80002de:	4c0c      	ldr	r4, [pc, #48]	; (8000310 <__libc_init_array+0x44>)
 80002e0:	f000 f818 	bl	8000314 <_init>
 80002e4:	1b64      	subs	r4, r4, r5
 80002e6:	10a4      	asrs	r4, r4, #2
 80002e8:	2600      	movs	r6, #0
 80002ea:	42a6      	cmp	r6, r4
 80002ec:	d105      	bne.n	80002fa <__libc_init_array+0x2e>
 80002ee:	bd70      	pop	{r4, r5, r6, pc}
 80002f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f4:	4798      	blx	r3
 80002f6:	3601      	adds	r6, #1
 80002f8:	e7ee      	b.n	80002d8 <__libc_init_array+0xc>
 80002fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80002fe:	4798      	blx	r3
 8000300:	3601      	adds	r6, #1
 8000302:	e7f2      	b.n	80002ea <__libc_init_array+0x1e>
 8000304:	0800032c 	.word	0x0800032c
 8000308:	0800032c 	.word	0x0800032c
 800030c:	0800032c 	.word	0x0800032c
 8000310:	08000330 	.word	0x08000330

08000314 <_init>:
 8000314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000316:	bf00      	nop
 8000318:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031a:	bc08      	pop	{r3}
 800031c:	469e      	mov	lr, r3
 800031e:	4770      	bx	lr

08000320 <_fini>:
 8000320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000322:	bf00      	nop
 8000324:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000326:	bc08      	pop	{r3}
 8000328:	469e      	mov	lr, r3
 800032a:	4770      	bx	lr
